'''
Created on May 5, 2017

@author: tomas
'''
import os


from general_utils import daytimeconv
from general_utils import latlon_nctools

#make model aggregated statistic NC files
def make_model_output_summary_files(out_dir, do_GHI, do_GHIc, do_DNI, do_DNIc, dfb_min, dfb_max, slot_min, slot_max, slot_time_step_min, bbox, overwrite=False, percentiles_name=[], version=None, region_suffix=''):
#    slot_time_step_min = 10
    year_min=daytimeconv.dfb2ymd(dfb_min)[0]
    year_max=daytimeconv.dfb2ymd(dfb_max)[0]
    
    result = True
    if do_GHI:
        #GHI_d_m [year,month,lat,lon] - monthly average of daily sum
        file_name = os.path.join(out_dir,'GHI_d_m'+region_suffix+'.nc')
        description='SolarGIS irradiation - GHI monthly statistics by year'
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels=['GHI_d_m']
        img_types=["NC_FLOAT"]
        img_units=['Wh']
        img_long_names=['GHI monthly average of daily sum by year']
        least_significant_digits=[1]
        novals=[-9.]
        chunksizes=[[1,1,64,64]]
        result&=latlon_nctools.latlon_make_params_year_month_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, year_min=year_min, year_max=year_max, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits,dims_name_colrow=False)


        #GHI_d_m_stats[month,lat,lon] - long term monthly stats of daily value P5, P25, P50, P75, P95, mean, std_d, std_m
        file_name = os.path.join(out_dir,'GHI_d_m_stats'+region_suffix+'.nc')
        description='SolarGIS irradiation - GHI monthly statistics'
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels, img_types, img_units, img_long_names, novals, chunksizes, least_significant_digits = [], [], [], [], [], [], []
        for perc_name in percentiles_name:#add percentiles
            img_channels.append(perc_name)
            img_types.append("NC_FLOAT")
            img_units.append('Wh')
            img_long_names.append('GHI daily sum longterm '+perc_name+' by month')
            novals.append(-9.)
            chunksizes.append([1,64,64])
            least_significant_digits.append(1)
        img_channels=img_channels+['mean', 'std_d', 'std_m']
        img_types=img_types+["NC_FLOAT","NC_FLOAT","NC_FLOAT"]
        img_units=img_units+['Wh', 'Wh', 'Wh']
        img_long_names=img_long_names+['GHI daily sum longterm mean by month', 'GHI daily sum STD(daily) by month', 'GHI daily sum STD(interannual monthly mean) by month']
        novals=novals+[-9., -9., -9.]
        chunksizes=chunksizes+[[1,64,64],[1,64,64],[1,64,64]]
        least_significant_digits=least_significant_digits+[1,1,1]
        result&=latlon_nctools.latlon_make_params_month_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False)


        #GHI_10min_m_stats[month,slot,lat,lon] - long term monthly stats of XX min value P5, P25, P50, P75, P95, mean
        file_name = os.path.join(out_dir,'GHI_%dmin_m_stats%s.nc'%(slot_time_step_min,region_suffix))
        description='SolarGIS irradiance - GHI monthly statistics by %d min'%(slot_time_step_min)
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels, img_types, img_units, img_long_names, novals, chunksizes, least_significant_digits = [], [], [], [], [], [], []
        for perc_name in percentiles_name:#add percentiles
            img_channels.append(perc_name)
            img_types.append("NC_FLOAT")
            img_units.append('W')
            img_long_names.append('GHI %dmin longterm %s by month'%(slot_time_step_min,perc_name))
            novals.append(-9.)
            chunksizes.append([1,8,64,64])
            least_significant_digits.append(1)
        img_channels=img_channels+['mean']
        img_types=img_types+["NC_FLOAT"]
        img_units=img_units+['W']
        img_long_names=img_long_names+['GHI %dmin longterm mean by month'%(slot_time_step_min)]
        novals=novals+[-9.]
        chunksizes=chunksizes+[[1,8,64,64]]
        least_significant_digits=least_significant_digits+[1]
        result&=latlon_nctools.latlon_make_params_month_slot_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, tslot_min=slot_min, tslot_max=slot_max, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False, slot_time_step_min=slot_time_step_min)

    
    if do_GHIc:
        #GHIc_10min_m_mean[month,slot,lat,lon] - long term monthly mean of 30 min value
        file_name = os.path.join(out_dir,'GHIc_%dmin_m_stats%s.nc'%(slot_time_step_min,region_suffix))
        description='SolarGIS irradiance - GHIc monthly statistics by %d min'%(slot_time_step_min)
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels=['mean']
        img_types=["NC_FLOAT"]
        img_units=['W']
        img_long_names=['GHIc %dmin longterm mean by month'%(slot_time_step_min)]
        chunksizes=[[1,8,64,64]]
        least_significant_digits=[1]
        novals=[-9.]
        result&=latlon_nctools.latlon_make_params_month_slot_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, tslot_min=slot_min, tslot_max=slot_max, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False, slot_time_step_min=slot_time_step_min)

    
    if do_DNI:
        #DNI_d_m [year,month,lat,lon] - monthly average of daily sum
        file_name = os.path.join(out_dir,'DNI_d_m'+region_suffix+'.nc')
        description='SolarGIS irradiation - DNI monthly statistics by year'
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels=['DNI_d_m']
        img_types=["NC_FLOAT"]
        img_units=['Wh']
        img_long_names=['DNI monthly average of daily sum by year']
        novals=[-9.]
        least_significant_digits=[1]
        chunksizes=[[1,1,64,64]]
        result&=latlon_nctools.latlon_make_params_year_month_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, year_min=year_min, year_max=year_max, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False)


        #DNI_d_m_stats[month,lat,lon] - long term monthly stats of daily value P5, P25, P50, P75, P95, mean, std_d, std_m
        file_name = os.path.join(out_dir,'DNI_d_m_stats'+region_suffix+'.nc')
        description='SolarGIS irradiation - DNI monthly statistics'
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels, img_types, img_units, img_long_names, novals, chunksizes, least_significant_digits = [], [], [], [], [], [], []
        for perc_name in percentiles_name:#add percentiles
            img_channels.append(perc_name)
            img_types.append("NC_FLOAT")
            img_units.append('Wh')
            img_long_names.append('DNI daily sum longterm '+perc_name+' by month')
            novals.append(-9.)
            chunksizes.append([1,64,64])
            least_significant_digits.append(1)
        img_channels=img_channels+['mean', 'std_d', 'std_m']
        img_types=img_types+["NC_FLOAT","NC_FLOAT","NC_FLOAT"]
        img_units=img_units+['Wh', 'Wh', 'Wh']
        img_long_names=img_long_names+['DNI daily sum longterm mean by month', 'DNI daily sum STD(daily) by month', 'DNI daily sum STD(interannual monthly mean) by month']
        novals=novals+[-9., -9., -9.]
        chunksizes=chunksizes+[[1,64,64],[1,64,64],[1,64,64]]
        least_significant_digits=least_significant_digits+[1,1,1]
        result&=latlon_nctools.latlon_make_params_month_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False)


        #DNI_10min_m_stats[month,slot,lat,lon] - long term monthly stats of XX min value P5, P25, P50, P75, P95, mean
        file_name = os.path.join(out_dir,'DNI_%dmin_m_stats%s.nc'%(slot_time_step_min,region_suffix))
        description='SolarGIS irradiance - DNI monthly statistics by %d min'%(slot_time_step_min)
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels, img_types, img_units, img_long_names, novals, chunksizes, least_significant_digits = [], [], [], [], [], [], []
        for perc_name in percentiles_name:#add percentiles
            img_channels.append(perc_name)
            img_types.append("NC_FLOAT")
            img_units.append('W')
            img_long_names.append('DNI %dmin longterm %s by month'%(slot_time_step_min,perc_name))
            novals.append(-9.)
            chunksizes.append([1,8,64,64])
            least_significant_digits.append(1)
        img_channels=img_channels+['mean']
        img_types=img_types+["NC_FLOAT"]
        img_units=img_units+['W']
        img_long_names=img_long_names+['DNI %dmin longterm mean by month'%(slot_time_step_min)]
        novals=novals+[-9.]
        chunksizes=chunksizes+[[1,8,64,64]]
        least_significant_digits=least_significant_digits+[1]
        result&=latlon_nctools.latlon_make_params_month_slot_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, tslot_min=slot_min, tslot_max=slot_max, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False, slot_time_step_min=slot_time_step_min)
    
    if do_DNIc:
        #GHIc_10min_m_mean[month,slot,lat,lon] - long term monthly mean of 30 min value
        file_name = os.path.join(out_dir,'DNIc_%dmin_m_stats%s.nc'%(slot_time_step_min,region_suffix))
        description='SolarGIS irradiance - DNIc monthly statistics by %d min'%(slot_time_step_min)
        metadata=[['description',description],['projection',"geographic coordinates"]]
        if version is not None:
            metadata.append(['version', version])
        img_channels=['mean']
        img_types=["NC_FLOAT"]
        img_units=['W']
        img_long_names=['DNIc %dmin longterm mean by month'%(slot_time_step_min)]
        chunksizes=[[1,8,64,64]]
        least_significant_digits=[1]
        novals=[-9.]
        result&=latlon_nctools.latlon_make_params_month_slot_lat_lon_nc(nc_file_name=file_name, metadata=metadata, force_overwrite=overwrite, img_channels=img_channels, img_types=img_types, img_units=img_units,img_long_names=img_long_names, novals=novals, tslot_min=slot_min, tslot_max=slot_max, nc_extent=bbox, compression=True, chunksizes=chunksizes, least_significant_digits=least_significant_digits, dims_name_colrow=False, slot_time_step_min=slot_time_step_min)

    return result
