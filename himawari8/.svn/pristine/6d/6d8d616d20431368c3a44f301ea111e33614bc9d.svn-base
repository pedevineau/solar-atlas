#!/usr/bin/env python
# -*- coding: utf-8 -*-

import bottle as btl
from io import StringIO, open

from general_utils.basic_logger import make_logger

logger = make_logger(__name__)
logger.setLevel(1)


app = btl.default_app()  # to be used on commandline, e.g.:
# $ gunicorn --workers 4 --timeout 300 --bind :8081 --reload --daemon --capture-output --log-file error_logs.log error_logs:app


@btl.get("/")
@btl.get("/ariel")
def black_pixel():
    FILE = "/net/ariel/home/satoper/himawari8_process_oper/himawari8_downloader.log"
    #FILE = "/tmp/himawari8_downloader_ariel.log"
    LAST_LENGTH = 3 * 10 ** 5

    btl.response.content_type = 'text/plain; charset=latin9'
    str_b = StringIO()
    with open(FILE, "rt") as fI:
        file_length = fI.seek(0, 2)
        abs_file_position = max(file_length - LAST_LENGTH, 0)
        fI.seek(abs_file_position, 0)
        fI = iter(fI)
        _ = next(fI)  # discard first (probably) incomplete line
        for line in fI:
            if ("[DEBUG]" in line) or ("[INFO]" in line):
                continue
            str_b.write(line)
        return str_b.getvalue()


@btl.get("/mab")
def black_pixel():
    FILE = "/net/mab/home/satoper/himawari8_process_oper/himawari8_downloader.log"
    #FILE = "/tmp/himawari8_downloader_mab.log"
    LAST_LENGTH = 2 * 10 ** 7

    btl.response.content_type = 'text/plain; charset=latin9'
    str_b = StringIO()
    with open(FILE, "rt") as fI:
        file_length = fI.seek(0, 2)
        abs_file_position = max(file_length - LAST_LENGTH, 0)
        fI.seek(abs_file_position, 0)
        fI = iter(fI)
        _ = next(fI)  # discard first (probably) incomplete line
        for line in fI:
            if ("[DEBUG]" in line) or ("[INFO]" in line):
                continue
            str_b.write(line)
        return str_b.getvalue()


if __name__ == '__main__':
    btl.run(host="", port=8081, debug=True, reloader=True)
