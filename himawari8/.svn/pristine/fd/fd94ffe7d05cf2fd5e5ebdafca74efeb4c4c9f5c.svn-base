#! /usr/bin/env python

from general_utils import daytimeconv
from aerosols.model import atmosphere_param
from himawari8.sat_model import himawari_mdl_core

if __name__ == "__main__":
    dfbStart = daytimeconv.yyyymmdd2dfb('20150731')
    dfbEnd = daytimeconv.yyyymmdd2dfb('20160331')
    
    #1009277
    #2006811 = LL pixel of c63, r10
#    sites = [ 1009186,1009173,1009191,1009192,1009185,1009194,1009198,1009200,1009201,1009204,1009205,1009207,1009249,1009261,1009262,1009263,1009277,1009276,1009275,1009274,1009273,1009271,1009270,1009278,1009279,1009272,1009209 ]
#    sites = [ 1009186,1009173,1009277,1009276,1009274,1009270,1009278] #N
#    sites = [ 1009185,1009194,1009198,1009200,1009201,1009204] #S
#    sites = [1009261, 1009249,1009271] #C
    sites = [2006811]
    
    output_table_suffix = "v20a"
    output_table_descr = "himawari model"


    slotStart = 1
    slotEnd = 144

    dsnSiteDict={'db':'site_coordinates', 'host':'dbdata', 'user':'gm_user', 'password':'ibVal4'}
    dsnDataDict={'db':'himawari_sites', 'host': 'dbdata', 'user': 'gm_user', 'password': 'ibVal4'}
    

    trail_window_size=30
    
    satInfoDict={\
            'satList' : ["H08"],\
            'chanNameList' : ['VIS064_2000', 'VIS160_2000', 'IR124_2000', 'IR390_2000'],\
                 }

    #atmosphere section
#    aod_path = '/net/sponde/data/model_data/data_aod/'
    aod_path = '/home0/model_data/data_aod/'
    aod_ncfiles, wv_ncfiles = himawari_mdl_core.init_aod_nc_files_v21u()
#    aod_ncfiles, wv_ncfiles = goes_mdl_core.init_aod_nc_files_v20a()
    # ATMOSPHERE TYPES
    # primary_type : 1-rural (water and dust-like), 4-maritime (rural and sea salt), 5-urban (rural and soot-like), 6-tropospheric (rural mixture)
    # secondary_type : -9 for None or atmosphere type code
    # secondary_weight_file : number <0.0,1.0> or NC file with weight data
    atmosph=atmosphere_param.atmosphere_param(primary_type = 6, secondary_type = 5, secondary_weight_file = aod_path+'aod_urban_type_weight_v1.nc')
    atmosph.hourly_data_persistence = 0
    atmosph.aod_path = aod_path
    atmosph.aod_ncfiles = aod_ncfiles
    atmosph.wv_ncfiles = wv_ncfiles
    atmosph.do_smoothing=True
    atmosph.do_extreme_correction=True
#    atmosph.extreme_correction_params=[0.1,0.25,0.85,0.75]
    atmosph.extreme_correction_params=[0.0,0.6,1.0,0.85]
    
#    aux data used in sat data classification %s auto replaced by region suffix
    geom_data_path = "/net/himalia/model_data_himawari/data_geom/" 
#    snow_data_path = '/net/europa/home1/model_data/data_snow/'
    auxdata_file_dict = {\
#                        "era_temp":[loc_path + "/data_era/era_interim_monthly_mean.nc", "t2_06_mean", "t2_06_std"],\
#                        "era_dem":[loc_path + "/data_era/era_interim_ancillary_data.nc", "dem"], \
#                        "SDWE":[snow_data_path+"/*_sdwe_%s.nc","sdwe"],\
                        "UB":[geom_data_path+"/mfg_UB%s.nc","UB"]}
    
    
    output_fields=["ghi", "ghi_c", "dni", "dni_c", "ktm", "ci", "ci_flag", "lbclass", "lb", "lbland"]
    
    ############################################
   


    for site in sites:
        output_table="res_model_%d_%s" % (site,output_table_suffix)
        himawari_mdl_core.output_table_init(dsnDataDict, output_table, output_table_descr, output_fields)

        himawari_mdl_core.sat_model_point_db(dsnSiteDict, dsnDataDict, site, dfbStart, dfbEnd, slotStart, slotEnd, satInfoDict, atmosph, output_table, output_fields, auxdata_file_dict, trail_window_size=trail_window_size, init_by_previousday=False, verbose=True)

        himawari_mdl_core.output_table_indexes(dsnDataDict, output_table)

    print 'DONE ALL'

